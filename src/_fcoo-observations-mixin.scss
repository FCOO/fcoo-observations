/***********************************************

fcoo-observations-mixin.scss

************************************************/

/*
table.last-observation = two coloums: group-name, last value
table.obs-statistics: rows = [time-periods, obs-group headser, tree intervals, obs-group headser, tree intervals,...]
*/
table.last-observation, table.obs-statistics {
    width : 100%;
}
table.last-observation {
    td:first-child {
        text-align   : right;
        padding-right: $input-padding-x;
    }
    td:last-child {
        text-align   : left;
        .no-multi-obs-group & {
            text-align: center;
        }
    }
}
table.obs-statistics {
    table-layout: fixed;

    //Time-intervals and tree value-intervals
    tr:nth-of-type(2n+1) {
        font-size : 0.6875rem; //Hard-coded: fontsize=11px
        border-bottom: 1px solid $modal-content-border-color;
        &.no-border-border-when-last-visible:last-child,
        .no-multi-obs-group & {
            border-bottom: none;
        }
    }
    td {
        width: 33%;

        padding-bottom: $input-padding-x / 2.5;
        padding-top   : $input-padding-x / 2.5;

        //Span with values
        span.value {
            display   : inline-block;
            text-align: center;
            font-size : $font-size-xxs; //11px
        }
    }
}

/*
obs-group-marker-N used to display a marker on the map if observation group N is visible.
class="obs-group-marker-1 obs-group-marker-3" will be visible if group 1 OR group 3 is visible
*/
.leaflet-container {
    [class*="obs-group-marker-"] {
        display: none;
    }
    @for $index from 0 to 10 {
        &.obs-group-#{$index} {
            .obs-group-marker-#{$index} { display: block; }
        }
    }
}


/*
Inner box with latest observation in popup
*/
.latest-observation:not(:last-child) {
    border-bottom: 1px solid $modal-content-border-color;
}


/*
show-for-obs-group-N is added to show an element when observation group no N is visible
*/
@for $index from 0 to 10 {
    .no-obs-group-#{$index} .show-for-obs-group-#{$index} {
        display: none !important;
    }

    //Special cast: In list with (last) observation or forecast the last visible group do not have bottom-border
    .last-visible-obs-group-#{$index} .show-for-obs-group-#{$index}.no-border-border-when-last-visible {
        border-bottom: none;
    }
}


/*
obs-group-header used for the name of the observation-group. Is hidden when only one group is displasyed on a map to save space
*/

.obs-group-header {
    margin : 0 !important;
    .multi-obs-group    &.show-for-single-obs-group,
    .no-multi-obs-group &.show-for-multi-obs-group {
        display: none !important;
    }
}

/*
obs-group-icon used to style the different "lines" inside the marker
on a map representing the different ObservationGroup that the location
is belonging to
Each ObservationGroup has an index N and the "lines" representing the group
get class="obs-group-icon obs-group-icon-N" plus the fa-classes to create the icon
*/
.leaflet-container {
    .obs-group-icon.in-marker {
        visibility: hidden;
    }
    @for $index from 0 to 10 {
        &.obs-group-#{$index} .obs-group-icon.in-marker.obs-group-#{$index} {
            visibility: visible;
        }
    }
}

i.fa-font-size-1rem {
    font-size: 1rem !important;
}

.fa-obs-line {
    --fa-pos       : 1;
    --fa-line-width: 1px;
    --fa-line-color: black;
    --fa-line-border: var(--fa-line-width) solid var(--fa-line-color);

    --start: 1px;
    --end  : 1px;

    width   : 1em;
    height  : 1em;
    position: relative;
    top     : 2px;


    &::before {
        content: '';
        position: absolute;
        left  : 1px;
        right : 1px;
        top   : 1px;
        bottom: 1px;
        box-sizing: border-box;
    }


    &.fa-obs-line-horizontal::before {
        border-top  : var(--fa-line-border);
        top         : calc( var(--fa-pos) * 1px);
        left        : var(--start);
        right       : var(--end);

    }

    &.fa-obs-line-vertical::before {
        border-left : var(--fa-line-border);
        left        : calc( var(--fa-pos) * 1px);
        top         : var(--start);
        bottom      : var(--end);
    }

    @for $index from 1 to 14 {
        &.fa-obs-line-pos-#{$index}{
            --fa-pos: #{$index};
        }
    }

    //Different lengths. a-b = the Ath part of a line divided in B
    &.fa-obs-line-1-2 { --end  : 8px; }
    &.fa-obs-line-2-2 { --start: 8px; }

    &.fa-obs-line-1-3 { --end  : 10px; }
    &.fa-obs-line-2-3 { --start:  6px; --end: 6px}
    &.fa-obs-line-3-3 { --start: 10px; }

}


/*****************************************************
Adjustments of vertical and horizontal lines in
icons for different observation-groups
The factor 11/14 is from the inner-height of the
square icon = 11px when font-size = 14px
From src/location-1.js the following placement is used
when dim = inner height of the icon and pos = from top
Position =
'left'         or 'top'   : pos = dim/4
'beside-left'  or 'over'  : pos = dim/3
'middle'       or 'center': pos = dim/2
'beside-right' or 'below' : pos = dim/2 + dim/4
'right'        or 'bottom': pos = dim/2 + dim/3

In css the linie (fa-minus) is already at middle/center =>
all pos in scc = pos - dim/2
The calc(... - 1px) is fine fine tuning due to the non-symetric shape of the icon
*****************************************************/
$factor: 11/14;
$dim4  : (1em / 4) * $factor;
$dim3  : (1em / 3) * $factor;
$dim2  : (1em / 2) * $factor;

$top1: (1em / 12) *  $factor;


.obs-group-icon-container {
    font-size: 16px;
}

.obs-group-icon        {
    position  : relative;
//    font-size: 16px; //calc( 10em/10);
}

.obs-group-icon-top          { top: calc( #{$dim4 - $dim2} - 1px);  }
.obs-group-icon-over         { top: $dim3 - $dim2;                  }
.obs-group-icon-center       { top: 0;                              }
.obs-group-icon-below        { top: calc( #{$dim4} - 1px);          }
.obs-group-icon-bottom       { top: $dim3;                          }

.obs-group-icon-TEST       { top: $top1;                          }





.obs-group-icon-left         { left: calc( #{$dim4 - $dim2} - 1px); }
.obs-group-icon-beside-left  { left: $dim3 - $dim2;                 }
.obs-group-icon-middle       { left: 0;                             }
.obs-group-icon-beside-right { left: calc(#{$dim4} - 1px);          }
.obs-group-icon-right        { left: $dim3;                         }




/*
.obs-group-icon-top          { top: -0.30em; z-index: 10; }
.obs-group-icon-over         { top: -0.20em; }

.obs-group-icon-center       { top:  0;      z-index:  1; }

.obs-group-icon-below        { top:  0.25em; }
.obs-group-icon-bottom       { top:  0.30em; z-index: 10; }

.obs-group-icon-left         { left: -0.30em; z-index: 10; }
.obs-group-icon-beside-left  { left: -0.20em; }

.obs-group-icon-middle       { top:  0;      z-index:  1; }

.obs-group-icon-beside-right { top:  0.25em; }
.obs-group-icon-right        { left:  0.30em; z-index: 10; }
*/
